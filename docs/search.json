[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NBA draft analysis",
    "section": "",
    "text": "1 Introduction"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\n#Data Preprocess\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\ndata1 &lt;- read.csv(\"all_seasons.csv\")\ndata2 &lt;- read.csv(\"nbaplayersdraft.csv\")\ndata2 &lt;- rename(data2, player_name = player)\nd1 &lt;- data1 %&gt;%\n  group_by(player_name, draft_number) %&gt;%\n  summarise(\n    player_height = mean(player_height),\n    player_weight = mean(player_weight),\n    total_game = sum(gp),\n    total_pointdiff = sum(net_rating * gp),\n    off_rebound = sum(oreb_pct*gp)/total_game,\n    def_rebound = sum(dreb_pct*gp)/total_game,\n    usg_pct = sum(usg_pct*gp)/total_game,\n    ts_pct= sum(ts_pct*gp)/total_game,\n    ast_pct = sum(ast_pct*gp)/total_game,\n    country = first(country)\n  )\n\n\n`summarise()` has grouped output by 'player_name'. You can override using the\n`.groups` argument.\n\n\nCode\ndata2$\"overall_pick\" = as.character(data2$\"overall_pick\")\ndf &lt;- inner_join(d1, data2, by = c(\"player_name\" = \"player_name\", \"draft_number\" = \"overall_pick\"))"
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nmiss_df &lt;- colSums(is.na(df))  |&gt;\n  sort(decreasing=TRUE)\nprint(miss_df)\n\n\n      X3_point_percentage     free_throw_percentage     field_goal_percentage \n                       87                        27                         6 \nwin_shares_per_48_minutes            box_plus_minus              years_active \n                        3                         3                         2 \n                    games            minutes_played                    points \n                        2                         2                         2 \n           total_rebounds                   assists    average_minutes_played \n                        2                         2                         2 \n          points_per_game    average_total_rebounds           average_assists \n                        2                         2                         2 \n               win_shares    value_over_replacement               player_name \n                        2                         2                         0 \n             draft_number             player_height             player_weight \n                        0                         0                         0 \n               total_game           total_pointdiff               off_rebound \n                        0                         0                         0 \n              def_rebound                   usg_pct                    ts_pct \n                        0                         0                         0 \n                  ast_pct                   country                        id \n                        0                         0                         0 \n                     year                      rank                      team \n                        0                         0                         0 \n                  college \n                        0 \n\n\nCode\n#install.packages(\"mi\")\nlibrary(mi)\n\n\nWarning: package 'mi' was built under R version 4.3.2\n\n\nLoading required package: Matrix\n\n\nLoading required package: stats4\n\n\nmi (Version 1.1, packaged: 2022-06-05 05:31:15 UTC; ben)\n\n\nmi  Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 Trustees of Columbia University\n\n\nThis program comes with ABSOLUTELY NO WARRANTY.\n\n\nThis is free software, and you are welcome to redistribute it\n\n\nunder the General Public License version 2 or later.\n\n\nExecute RShowDoc('COPYING') for details.\n\n\nCode\nlibrary(remotes)\n\n\nWarning: package 'remotes' was built under R version 4.3.2\n\n\nCode\nremotes::install_github(\"jtr13/redav\")\n\n\nSkipping install of 'redav' from a github remote, the SHA1 (8eae0fa5) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nCode\nlibrary(redav)\nplot_missing(df)\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\nFrom the print result, we can know that the most missing values appear in the column of “X3_point_percentage” (6%) and free_throw_percentage has 27 missing values (1.9% of total data). A few other columns each has lower than 10 missing values. The missing values only occupy a little percentage of the total data. By examining the missing value patter from graph above, we discover that over 90% rows are complete and the most frequent missing pattern is only missing the data of “X3_point_percentage”. We observed that there is 0 in columns, such as X3_point_percentage and free_throw_percentage, so na does not represent the player does not score 3 points or not not earn free throw point. It is not recorded due to some unknown facts or lost on the website. We have checked these data in the original website:https://www.basketball-reference.com/, where it is not recorded as well. We also notice that the missing value in one column is correalted to the missing value in another column. Otherwise, the missing pattern should be a single missing value each row. We will investigate that in the following graph. There is another two players with many missing data.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.3     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::complete() masks mi::complete()\n✖ tidyr::expand()   masks Matrix::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ tidyr::pack()     masks Matrix::pack()\n✖ tidyr::unpack()   masks Matrix::unpack()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ndf$na_count &lt;- rowSums(is.na(df))\ndf$draft_number &lt;- as.numeric(df$draft_number)\nggplot(df, aes(total_game, na_count))+\n  geom_point()+\n  labs(title = \"Relationship between na_counts and total game\")\n\n\n\n\n\nFrom the graph above, we can notice that the two player with 17 na values all play a few games.All statistics is not recorded. It is likely that they left the league or unable to play the games, so their statistics are not recorded. We are going to discard this two players. We discover that players with na values tend to have less total games in NBA and the less games they played, the more na values they had. we may concluded that the na values are due to the less appearance. In other words, bad performance is related to the na value, so we cannot simply discard these data. Because there is only a few missing values, we may use line regression or average to replace the na."
  }
]