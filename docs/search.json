[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NBA draft analysis",
    "section": "",
    "text": "1 Introduction\nAnalyzing the NBA draft process for new players provides a rich perspective on how professional basketball teams in the National Basketball Association (NBA) build their rosters, strategize for success, and adapt to the sport’s evolving nature. The NBA draft is an essential annual event where teams select from a pool of eligible players, typically those leaving college basketball, to join the league. The draft consists of two rounds, with each of the 30 NBA teams having one pick in each round, although they can trade these picks. The order of selection is determined primarily by the teams’ performance in the previous season, with the lesser-performing teams getting earlier picks. This system is designed to help maintain competitive balance by allowing teams with poorer records to improve by adding young, talented players.\nOur analysis is crucial for understanding the decisions that shape young athletes’ careers and the competitive dynamics of the NBA. A key focus is on team performance in drafting: we seek to identify teams that are skilled at selecting historically great players. Are certain teams consistently picking players who later achieve significant success, such as earning All-Star selections, All-NBA team honors, or winning championships? This insight can shed light on the effectiveness of organizations’ scouting and decision-making processes, reflecting the long-term strategic planning and talent evaluation skills of NBA franchises.\nAnother intriguing area of study involves the evolving trends in the physical characteristics of first-round draft picks, such as height, weight, positions (like guard or center), and birth country. By examining these attributes over time, we aim to understand how the game’s style and the valued traits in players are changing. What traits are teams with early draft picks looking for in players, and how is this evolving? This analysis can reveal shifts in the strategic focus of teams based on the evolving nature of the NBA and its increasing globalization.\nPlayer development is also a vital aspect of team strategy, particularly in how teams nurture their drafted rookies. We will assess which teams excel in improving their players’ performance in areas like shooting percentage, points, rebounds, and assists. Additionally, analyzing which rookie players are more prone to injuries could indicate the effectiveness of teams’ injury prevention and player health management.\nFurthermore, the role of collegiate basketball in developing professional talent is another key area of interest. Identifying which colleges are producing the most successful NBA players can highlight the effectiveness of different college programs in preparing athletes for the professional level. This analysis can also inform recruitment strategies and collaborations between NBA teams and collegiate programs.\nIn summary, our analysis of NBA drafting encompasses strategic, operational, and cultural aspects of basketball. It provides valuable insights for fans, aspiring athletes, team managers, and sports analysts alike, providing insight into past and present strategies in the league."
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nFor our project, we have selected two primary datasets on NBA players available on Kaggle. These datasets are sourced from Basketball Reference, a highly respected provider of NBA data. Opting for these pre-aggregated datasets allows us to concentrate on analysis and visualization without the need for extensive data scraping and compilation. Covering over two decades, these datasets encompass player demographics like age, height, weight, and birthplace, alongside biographical information such as the team they played for, their draft year, and the draft round. They also include basic statistical data such as games played, and average points, rebounds, and assists. The latest update for these datasets is from the 2021 season, and we plan to import them in CSV file format.\nAdditionally, we will be using specific data directly from Basketball Reference, particularly for achievements and advanced statistics, to ensure currency and relevance. This includes all-star game selections, all-NBA selections, and championships. One notable limitation with the championships data is its inclusion criterion—only players with at least three championships are listed. To address this, we will either manually incorporate players with at least one championship or address this point in our results. While some data from Basketball Reference can be directly imported as CSV files, other datasets will require manual assembly. Furthermore, advanced NBA statistics will be sourced directly from the NBA’s official site. As this data is not available for export, manual collection will be necessary for incorporation into our analysis.\nFinally, we are utilizing an additional Kaggle dataset that extensively monitors reported NBA player injuries, compiled by Pro Sports Transactions. Despite not being as renowned as Basketball Reference, this site provides an extensive compilation of data for various sports such as baseball, hockey, soccer, football, and basketball. This dataset, in CSV format, includes updated information for the current season.\n\n2.1.1 Kaggle Datasets\n\nGeneral NBA Player Stats and History:\n\nDataset 1\nDataset 2\n\n\n\n\n2.1.2 Basketball Reference Data\n\nAll-star Players: All-Star by Player\nAll-NBA Selection: All-League by Player\nNBA Championships: Most Championships\n\n\n\n2.1.3 NBA Official Site\n\nAdvanced Stats for Teams and Players:\n\nAdvanced Player Stats\nAdvanced Team Stats\n\n\n\n\n2.1.4 Kaggle Injury Data\n\nNBA Injury Stats: NBA Injury Stats (Kaggle)"
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\nOur project leverages comprehensive datasets that enable us to delve deeply into various facets of NBA drafting strategies and their outcomes. By thoroughly analyzing these datasets, we will uncover insights into the effectiveness of different teams’ drafting approaches, trends in player attributes, and the impact of draft positions on player success.\nWe aim to identify teams proficient in drafting the “best” players. To achieve this, we will use datasets containing detailed information about players’ draft specifics, such as the drafting team, and their career achievements, including NBA championships, All-Star, and All-NBA selections. By correlating the number of high-achieving players a team has drafted with the team itself, we plan to create visualizations that demonstrate which teams consistently identify top talent. This analysis will involve graphing the frequency of high-achieving players in relation to the teams that drafted them.\nOur study also examines the advantages of drafting players based on physical attributes like height, weight, or country of birth. Utilizing the extensive data available, we will analyze trends in these attributes among first-round picks over time. We intend to graph the average height and weight of first-round picks across different years to discern any significant trends. Additionally, we’ll investigate the proportion of American versus non-American players drafted in the first round, and whether certain teams prefer non-American players. These analyses will aid in understanding the role of physical attributes and nationality in drafting decisions.\nAnother critical aspect of our research is assessing the effectiveness of early draft picks. We plan to compare the average performance statistics, such as points, assists, and rebounds, of the top 10 and bottom 10 players from each draft year. By graphing these metrics across multiple seasons, we can evaluate whether early draft selections are indicative of future success in the NBA.\nFurthermore, our analysis includes evaluating how well teams develop their drafted players. We will compare the statistics of rookies at the start and end of their initial contracts across different teams to identify which teams are most successful at enhancing their players’ skills. Visualizations depicting the percentage improvement in key stats for each team will highlight those with effective player development programs. The injury dataset we have selected will allow us to explore the health management practices of teams, especially regarding rookies. We plan to identify the teams with the highest incidence of rookie injuries, which could point to potential areas for improvement in their training and health management strategies.\nLastly, we will investigate whether players from specific colleges are more likely to achieve success in the NBA. By correlating players’ college backgrounds with their draft positions and subsequent professional accomplishments, we can create visualizations that display the number of top-10 draft picks, NBA champions, All-Stars, and All-NBA selections from each college. This analysis will offer insights into the effectiveness of different college programs in preparing players for the NBA."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\n\n2.3.1 Data Preprocess\n\n\nCode\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\ndata1 &lt;- read.csv(\"all_seasons.csv\")\ndata2 &lt;- read.csv(\"nbaplayersdraft.csv\")\ndata3 &lt;- read.csv(\"player_achievements.csv\")\ndata2 &lt;- rename(data2, player_name = player)\nd1 &lt;- data1 %&gt;%\n  group_by(player_name, draft_number) %&gt;%\n  summarise(\n    player_height = mean(player_height),\n    player_weight = mean(player_weight),\n    total_game = sum(gp),\n    total_pointdiff = sum(net_rating * gp),\n    off_rebound = sum(oreb_pct*gp)/total_game,\n    def_rebound = sum(dreb_pct*gp)/total_game,\n    usg_pct = sum(usg_pct*gp)/total_game,\n    ts_pct= sum(ts_pct*gp)/total_game,\n    ast_pct = sum(ast_pct*gp)/total_game,\n    country = first(country),\n    draft_round = first(draft_round),\n    draft_year = first(draft_year),\n    .groups = \"drop\"\n  )\nd1$'draft_round'[d1$'draft_round' == \"Undrafted\"] &lt;- \"0\"\nd1$'draft_round' = as.numeric(d1$'draft_round')\nd1$'draft_year'[d1$'draft_year' == \"Undrafted\"] &lt;- \"0\"\nd1$'draft_year' = as.numeric(d1$'draft_year')\ndata2$\"overall_pick\" = as.character(data2$\"overall_pick\")\ndf &lt;- inner_join(d1, data2, by = c(\"player_name\" = \"player_name\", \"draft_number\" = \"overall_pick\"))\ndf &lt;- left_join(df, data3, by = c (\"player_name\" = \"Player.Name\"))\n\ndf &lt;- df %&gt;%\n  mutate(\n    Total.All.Star.Selections = replace(Total_All_Star_Selections, is.na(Total_All_Star_Selections), 0),\n    Total.All.NBA.Selections = replace(Total_All_NBA_Selections, is.na(Total_All_NBA_Selections), 0),\n    Total.Championships = replace(Total_Championships, is.na(Total_Championships), 0)\n  )\n\n\n\n\n2.3.2 Missing plot analysis\n\n\nCode\nmiss_df &lt;- colSums(is.na(df))  |&gt;\n  sort(decreasing=TRUE)\nprint(miss_df)\n\n\nTotal_All_Star_Selections  Total_All_NBA_Selections       Total_Championships \n                     1220                      1220                      1220 \n      X3_point_percentage     free_throw_percentage     field_goal_percentage \n                       87                        27                         6 \nwin_shares_per_48_minutes            box_plus_minus              years_active \n                        3                         3                         2 \n                    games            minutes_played                    points \n                        2                         2                         2 \n           total_rebounds                   assists    average_minutes_played \n                        2                         2                         2 \n          points_per_game    average_total_rebounds           average_assists \n                        2                         2                         2 \n               win_shares    value_over_replacement               player_name \n                        2                         2                         0 \n             draft_number             player_height             player_weight \n                        0                         0                         0 \n               total_game           total_pointdiff               off_rebound \n                        0                         0                         0 \n              def_rebound                   usg_pct                    ts_pct \n                        0                         0                         0 \n                  ast_pct                   country               draft_round \n                        0                         0                         0 \n               draft_year                        id                      year \n                        0                         0                         0 \n                     rank                      team                   college \n                        0                         0                         0 \nTotal.All.Star.Selections  Total.All.NBA.Selections       Total.Championships \n                        0                         0                         0 \n\n\nCode\n#install.packages(\"mi\")\nlibrary(mi)\n\n\nLoading required package: Matrix\n\n\nLoading required package: stats4\n\n\nmi (Version 1.1, packaged: 2022-06-05 05:31:15 UTC; ben)\n\n\nmi  Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 Trustees of Columbia University\n\n\nThis program comes with ABSOLUTELY NO WARRANTY.\n\n\nThis is free software, and you are welcome to redistribute it\n\n\nunder the General Public License version 2 or later.\n\n\nExecute RShowDoc('COPYING') for details.\n\n\nCode\nlibrary(remotes)\n#remotes::install_github(\"jtr13/redav\")\nlibrary(redav)\nplot_missing(df)\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\nFrom the print result, we can see that the column with the most missing values is “3_point_percentage” (6%), and “free_throw_percentage” has 27 missing values, accounting for 1.9% of the total data. A few other columns have fewer than 10 missing values each. The missing values only account for a small percentage of the total data. When examining the missing value pattern from the graph above, we discover that over 90% of the rows are complete, and the most common missing pattern is the absence of data in the “X3_point_percentage” column.\nWe have observed that there are zeros in columns such as “3_point_percentage” and “free_throw_percentage,” so “na” does not indicate that the player did not score 3 points or did not earn free throw points. Instead, it is not recorded due to unknown factors or data loss on the website. We have verified this data on the original website (https://www.basketball-reference.com/), where it is also not recorded. Additionally, we have noticed that missing values in one column are correlated with missing values in another column. Otherwise, the missing pattern would be a single missing value in each row. We will investigate this further in the following graph. There are also two players with a significant amount of missing data.\n\n\n2.3.3 Analysis the relationship betwen na counts and\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.4     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::complete() masks mi::complete()\n✖ tidyr::expand()   masks Matrix::expand()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ tidyr::pack()     masks Matrix::pack()\n✖ tidyr::unpack()   masks Matrix::unpack()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ndf$na_count &lt;- rowSums(is.na(df))\ndf$draft_number &lt;- as.numeric(df$draft_number)\nggplot(df, aes(total_game, na_count))+\n  geom_point()+\n  labs(title = \"Relationship between na_counts and total game\")\n\n\n\n\n\nFrom the graph above, we can observe that the two players with 17 “na” values have played only a few games, and as a result, all their statistics are not recorded: Jason Preston and RaiQuan Gray. Doing some research, both players were waived by their teams and are playing in the G-League (minor league organization of the NBA), therefore, we will exclude these two players from our analysis which is focused on NBA players.\nWe have also noticed that players with “na” values tend to have fewer total games in the NBA, and the fewer games they have played, the more “na” values are present in their statistics. This suggests that the “na” values are associated with fewer appearances, possibly indicating poorer performance. Therefore, we cannot simply discard this data. Given the limited number of missing values, we may consider using linear regression or averaging to replace the “na” values in these cases."
  },
  {
    "objectID": "results.html#data-preprocess",
    "href": "results.html#data-preprocess",
    "title": "3  Results",
    "section": "3.1 Data Preprocess",
    "text": "3.1 Data Preprocess\n\n\nCode\n#install.packages(\"dplyr\")\n#install.packages(\"GGally\")\n#install.packages(\"readr\")\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(GGally)\n\n\nLoading required package: ggplot2\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nCode\nlibrary(readr)\n\ndata1 &lt;- read.csv(\"all_seasons.csv\")\ndata2 &lt;- read.csv(\"nbaplayersdraft.csv\")\ndata3 &lt;- read.csv(\"player_achievements.csv\")\ndata2 &lt;- rename(data2, player_name = player)\nd1 &lt;- data1 %&gt;%\n  group_by(player_name, draft_number) %&gt;%\n  summarise(\n    player_height = mean(player_height),\n    player_weight = mean(player_weight),\n    total_game = sum(gp),\n    total_pointdiff = sum(net_rating * gp),\n    off_rebound = sum(oreb_pct*gp)/total_game,\n    def_rebound = sum(dreb_pct*gp)/total_game,\n    usg_pct = sum(usg_pct*gp)/total_game,\n    ts_pct= sum(ts_pct*gp)/total_game,\n    ast_pct = sum(ast_pct*gp)/total_game,\n    country = first(country),\n    draft_round = first(draft_round),\n    draft_year = first(draft_year),\n    .groups = \"drop\"\n  ) \nd1$'draft_round'[d1$'draft_round' == \"Undrafted\"] &lt;- \"0\"\nd1$'draft_round' = as.numeric(d1$'draft_round')\nd1$'draft_year'[d1$'draft_year' == \"Undrafted\"] &lt;- \"0\"\nd1$'draft_year' = as.numeric(d1$'draft_year')\ndata2$\"overall_pick\" = as.character(data2$\"overall_pick\")\ndf &lt;- inner_join(d1, data2, by = c(\"player_name\" = \"player_name\", \"draft_number\" = \"overall_pick\"))\ndf &lt;- left_join(df, data3, by = c (\"player_name\" = \"Player.Name\"))\n\ndf &lt;- df %&gt;%\n  mutate(\n    Total_All_Star_Selections = replace(Total_All_Star_Selections, is.na(Total_All_Star_Selections), 0),\n    Total_All_NBA_Selections = replace(Total_All_NBA_Selections, is.na(Total_All_NBA_Selections), 0),\n    Total_Championships = replace(Total_Championships, is.na(Total_Championships), 0)\n  )\ndf$na_count &lt;- rowSums(is.na(df))\ndf$draft_number &lt;- as.numeric(df$draft_number)\n\ndf_1 &lt;- df[rowSums(is.na(df)) &lt;= 10, ]\ndf_processed &lt;- df_1 %&gt;%\n  mutate_if(is.numeric, ~ifelse(is.na(.), 0, .))"
  },
  {
    "objectID": "results.html#overall-draft-analysis",
    "href": "results.html#overall-draft-analysis",
    "title": "3  Results",
    "section": "3.2 Overall Draft Analysis",
    "text": "3.2 Overall Draft Analysis\n\n3.2.1 Points, Assists, Rebounds, Win Shares vs Pick Number (1-60)\n\n\nCode\nlibrary(tidyr)\n\nplayer_achievements &lt;- read_csv(\"player_achievements.csv\")\n\n\nRows: 580 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Player Name\ndbl (3): Total_All_Star_Selections, Total_All_NBA_Selections, Total_Champion...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nnbaplayersdraft &lt;- read_csv(\"nbaplayersdraft.csv\")\n\n\nRows: 1922 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): team, player, college\ndbl (21): id, year, rank, overall_pick, years_active, games, minutes_played,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Calculate the average for each metric by overall_pick\naverage_stats_by_pick &lt;- nbaplayersdraft %&gt;%\n  filter(overall_pick &lt;= 54) %&gt;%\n  group_by(overall_pick) %&gt;%\n  summarise(\n    average_points_per_game = mean(points_per_game, na.rm = TRUE),\n    average_total_rebounds = mean(average_total_rebounds, na.rm = TRUE),\n    average_assists = mean(average_assists, na.rm = TRUE),\n  )\n\n# Convert to long format for faceting\nlong_stats_by_pick &lt;- average_stats_by_pick %&gt;%\n  pivot_longer(\n    cols = starts_with(\"average_\"),\n    names_to = \"Metric\",\n    values_to = \"Average\"\n  )\n\n# Create the faceted plot\nggplot(long_stats_by_pick, aes(x = overall_pick, y = Average)) +\n  geom_line() + \n  facet_wrap(~Metric, scales = \"free_y\", nrow = 4) +\n  theme_minimal() +\n  labs(title = \"Average Player Stats by Draft Pick\",\n       x = \"Overall Draft Pick\",\n       y = \"Average\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme(legend.position = \"none\")\n\n\n\n\n\nFor each metric, they seem to level off around the 10-15th pick. So it would be to a team’s benefit to get draft pick somewhere in the top 10. While there seems to be an occasional star player picked in between 15 and 40, generally a team shouldn’t worry about the order as much.\n\n\n3.2.2 Advanced NBA Stats for Top 5 Picks Over time\n\n\nCode\n# Filter the data to include only the top 5 picks\ntop_picks &lt;- nbaplayersdraft %&gt;%\n  filter(overall_pick &gt;= 1 & overall_pick &lt;= 5)\n\n# Reshape the data to long format for faceting by metric\ntop_picks_long &lt;- top_picks %&gt;%\n  select(year, overall_pick, win_shares, value_over_replacement) %&gt;%\n  pivot_longer(\n    cols = c(win_shares, value_over_replacement),\n    names_to = \"Metric\",\n    values_to = \"Value\"\n  )\n\n# Create the faceted scatter plot for Win Shares and Value Over Replacement over time for the top 5 picks\nggplot(top_picks_long, aes(x = year, y = Value, color = factor(overall_pick))) +\n  geom_point() +\n  scale_color_brewer(palette = \"PuBu\", direction=-1) +  # Use a sequential color palette\n  facet_wrap(~Metric, scales = \"free_y\") +  # Create facets for each metric\n  theme_minimal() +\n  labs(title = \"Win Shares and Value Over Replacement for Top 5 Overall Picks Over Time\",\n       x = \"Year\",\n       y = \"Metric Value\",\n       color = \"Overall Pick\") +\n  theme(legend.position = \"right\")\n\n\n\n\n\nThe first overall pick overall performs well in statistics of “win share” and “values over replacement”, but it does not consistently end up being the best out of their draft class. For example, the first pick in 1998 scored the lowest in “win shares” and “values over replacement”. In conclusion, the players with higher priority pick number may reflect the players’ potential. They may also have consistent performance in NBA with their draft."
  },
  {
    "objectID": "results.html#total-player-achievements-and-their-draft-team",
    "href": "results.html#total-player-achievements-and-their-draft-team",
    "title": "3  Results",
    "section": "3.3 Total Player Achievements and their Draft Team",
    "text": "3.3 Total Player Achievements and their Draft Team\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(tidyr)\n\nmerged_achievement_data &lt;- left_join(player_achievements, nbaplayersdraft, by = c(\"Player Name\" = \"player\"))\n\nmerged_achievement_data &lt;- merged_achievement_data %&gt;%\n  filter(!is.na(team))\n\nteam_achievements &lt;- merged_achievement_data %&gt;%\n  group_by(team) %&gt;%\n  summarise(\n    TotalAllStarSelections = sum(Total_All_Star_Selections, na.rm = TRUE),\n    TotalAllNBASelections = sum(Total_All_NBA_Selections, na.rm = TRUE),\n    TotalChampionships = sum(Total_Championships, na.rm = TRUE)\n  ) %&gt;%\n  arrange(desc(TotalAllStarSelections))\n\n# Create separate Cleveland dot plots for each achievement\nplot1 &lt;- ggplot(team_achievements, aes(x = TotalAllStarSelections, y = reorder(team, TotalAllStarSelections))) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Total All-Star Selections per Team\",\n       x = \"Total All-Star Selections\",\n       y = \"Team\") +\n  theme(axis.text.y = element_text(hjust = 1))\n\nplot2 &lt;- ggplot(team_achievements, aes(x = TotalAllNBASelections, y = reorder(team, TotalAllNBASelections))) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Total All-NBA Selections per Team\",\n       x = \"Total All-NBA Selections\",\n       y = \"Team\") +\n  theme(axis.text.y = element_text(hjust = 1))\n\nplot3 &lt;- ggplot(team_achievements, aes(x = TotalChampionships, y = reorder(team, TotalChampionships))) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Total Championships per Team\",\n       x = \"Total Championships\",\n       y = \"Team\") +\n  theme(axis.text.y = element_text(hjust = 1))\n\nplot1\n\n\n\n\n\nCode\nplot2\n\n\n\n\n\nCode\nplot3\n\n\n\n\n\nThere is significant variability in the number of championships won by teams. Strong team will always tend to win the championship, because of its management, and competency. Wining championship will also earn money and fans for the team, which will assist the team wining championships.Teams like “GSW” and “CHI” have a high number of championships, which suggests a history of strong performance in NBA. Teams, such as “BRK”,and “CHO” have not won any championships.\n\n3.3.1 Players performance and their drafted team\n\n\nCode\ndf_team &lt;- df_processed %&gt;%\n  select(team, usg_pct:ast_pct, field_goal_percentage:free_throw_percentage)%&gt;%\n  group_by(team)%&gt;%\n  summarise(across(where(is.numeric), mean, na.rm = TRUE))%&gt;%\n  arrange(free_throw_percentage) %&gt;%  \n  mutate(team = factor(team, levels = team)) %&gt;%\n  pivot_longer(cols=usg_pct:free_throw_percentage)\n\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(where(is.numeric), mean, na.rm = TRUE)`.\nℹ In group 1: `team = \"ATL\"`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\nCode\nggplot(df_team, aes(x = value, y = team, fill=name)) + \n  geom_point(stat = \"identity\", shape = 21, color = \"black\", size = 1.5) +\n  labs(y = \"Team\", x = \"Category\")+\n  scale_color_manual(values = c(\"blue\", \"red\",  \"green\", \"yellow\", \"purple\", \"#008080\"))\n\n\n\n\n\nNOH, DET, and BRK teams always choose the players with greater free throw ability. The players chosen by NOK and CHO tend to have low free throw percentage. TOR and MIL are better at choosing players with strong 3 point percentage. Players picked by WSB, LAC, and GSW tend to have low 3 point percentage. NOK teams is likely to choose players with low assist ability. There is no obvious difference among players of teams in field goal, ts and usg. In summary, teams choose the players with different strength, but players picked by NOK tend to weakness in all aspects."
  },
  {
    "objectID": "results.html#college-draft-targets",
    "href": "results.html#college-draft-targets",
    "title": "3  Results",
    "section": "3.4 College Draft Targets",
    "text": "3.4 College Draft Targets\n\n3.4.1 Points, Rebounds, Assists for NBA Players from each College\n\n\nCode\n# Calculate the totals for each metric by college\ntotal_stats_by_college &lt;- nbaplayersdraft %&gt;%\n  group_by(college) %&gt;%\n  summarise(\n    total_points_per_game = sum(points_per_game, na.rm = TRUE),\n    total_total_rebounds = sum(average_total_rebounds, na.rm = TRUE),\n    total_assists = sum(average_assists, na.rm = TRUE)\n  ) %&gt;%\n  filter(!is.na(college) & college != \"\") %&gt;%\n  ungroup()\n\n# Function to create a Cleveland dot plot for a given metric\ncreate_cleveland_plot &lt;- function(data, metric, title) {\n  top_colleges &lt;- data %&gt;%\n    top_n(50, !!sym(metric))\n\n  ggplot(top_colleges, aes(x = !!sym(metric), y = reorder(college, !!sym(metric)))) +\n    geom_point() +\n    theme_minimal() +\n    labs(title = title, x = \"Total\", y = \"College\") +\n    theme(axis.text.y = element_text(hjust = 1))\n}\n\nplot1 &lt;- create_cleveland_plot(total_stats_by_college, \"total_points_per_game\", \"Top 50 Colleges by Total Points Per Game\")\nplot2 &lt;- create_cleveland_plot(total_stats_by_college, \"total_total_rebounds\", \"Top 50 Colleges by Total Total Rebounds\")\nplot3 &lt;- create_cleveland_plot(total_stats_by_college, \"total_assists\", \"Top 50 Colleges by Total Assists\")\n\nplot1\n\n\n\n\n\nCode\nplot2\n\n\n\n\n\nCode\nplot3\n\n\n\n\n\n\n\n3.4.2 Analyze the performance of players based on their colleges\n\n\nCode\ndf_cleve &lt;- df_processed %&gt;%\n  select(college, usg_pct:ast_pct, field_goal_percentage:free_throw_percentage)%&gt;%\n  mutate(college = ifelse(college == \"\", \"Unknown\", college))%&gt;%\n  group_by(college)%&gt;%\n  filter(n()&gt;12)%&gt;%\n  summarise(across(where(is.numeric), mean, na.rm = TRUE))%&gt;%\n  arrange(free_throw_percentage) %&gt;%  \n  mutate(college = factor(college, levels = college)) %&gt;%\n  pivot_longer(cols=usg_pct:free_throw_percentage)\n\n\nggplot(df_cleve, aes(x = value, y = college, fill=name)) + \n  geom_point(stat = \"identity\", shape = 21, color = \"black\", size = 1.5) +\n  labs(y = \"College\", x = \"Category\")+\n  scale_color_manual(values = c(\"blue\", \"red\",  \"green\", \"yellow\", \"purple\", \"#008080\"))\n\n\n\n\n\nTo analyze the influence of college in draft, we analyze the players’ performance in assist, field goal, free throw, shooting efficiency, and, team plays. The college will influence the style of the player in the shooting and team plays. This analysis is to find out the styles of players from certain college. To avoid the randomness of the players, we only analyze the colleges with more than 12 players. We noticed that there is significant difference in ts, usg, and field goals. Players from Gonzaga, Villanova, and Oregan tend to have higher free throw percentage, while players from Louisville, Syracuse, and Florida, tend to lower free throw percentage. If NBA team need a player to earn points through free throw, they should pick players from Louisville, Syracuse, and Florida. The players in performance in X_3 point is around the same, except players from Louisville, Florida, Maryland, and LSU. The only two college with outstanding X_3 point are Villanova, and Oregona. If NBA team need a player to earn three points, they should pick players from Villanova, and Oregona, and avoid the four colleges mentioned above. Players from UCLA, Iowa state, and Oregan tend to have higher assist percentage, while players from stanford, Gergetown, and Maryland tend to lower assist percentage (close to 0). If NBA team need a player to earn points through corporation, they should pick players from UCLA, Iowa state, and Oregan. In conclusion, players from Oregona tend to have better performance while players from Maryland perform bad in statistics.\n\n\n3.4.3 Top College Targets for Draft Teams\nThese colleges seem to be producing the best NBA players: Kentucky, Duke, UCLA, Arizona, Kansas. Are there team targeting players from these colleges on draft night?\n\n\nCode\n# Filter the dataset for the specified colleges\nfiltered_data &lt;- nbaplayersdraft %&gt;%\n  filter(college %in% c(\"Kentucky\", \"Duke\", \"UCLA\", \"Arizona\", \"Kansas\"))\n\n# Count the number of players drafted by each team from these colleges\nteam_draft_counts &lt;- filtered_data %&gt;%\n  count(team, college) %&gt;%\n  arrange(desc(n))\n\n# Create a bar plot\nggplot(team_draft_counts, aes(x = reorder(team, n), y = n, fill = college)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"NBA Team Draft Counts from Top 5 Basketball Colleges\",\n       x = \"Team\",\n       y = \"Number of Players Drafted\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "results.html#drafting-based-on-physical-attributes",
    "href": "results.html#drafting-based-on-physical-attributes",
    "title": "3  Results",
    "section": "3.5 Drafting Based on Physical Attributes",
    "text": "3.5 Drafting Based on Physical Attributes\n\n3.5.1 Analyze the perfomance based on players’s height and weight\n\n\nCode\ndf_para &lt;- df_processed[, c(3, 4, 6:11, 22:34)]\ndf_related &lt;- df_para[, c(1,2, 4,5, 8,12, 16, 17)]\n\n\nggpairs(df_related,\n        lower = list(continuous = wrap(\"points\", alpha = 0.1, size=0.2)))\n\n\n\n\n\nCode\ncor_matrix &lt;- cor(df_para)\nprint(cor_matrix )\n\n\n                          player_height player_weight total_pointdiff\nplayer_height               1.000000000   0.810016717    -0.005902881\nplayer_weight               0.810016717   1.000000000     0.002070306\ntotal_pointdiff            -0.005902881   0.002070306     1.000000000\noff_rebound                 0.657602711   0.676755846    -0.014963783\ndef_rebound                 0.687000298   0.660634041     0.043594543\nusg_pct                    -0.177007446  -0.121910583     0.110216090\nts_pct                      0.060064828   0.074487565     0.127980238\nast_pct                    -0.682438903  -0.589578068     0.166197104\nminutes_played             -0.009102132   0.041667077     0.412231159\npoints                     -0.020820120   0.031342876     0.446122937\ntotal_rebounds              0.256355230   0.297859861     0.395999191\nassists                    -0.276795907  -0.206810978     0.438016857\nfield_goal_percentage       0.286714312   0.305856504     0.078994244\nX3_point_percentage        -0.403593505  -0.430280295     0.055997475\nfree_throw_percentage      -0.277206893  -0.256504924     0.062979894\naverage_minutes_played     -0.087874633  -0.055714515     0.250855082\npoints_per_game            -0.091299076  -0.051055317     0.290411245\naverage_total_rebounds      0.439650757   0.451872024     0.226797081\naverage_assists            -0.490414663  -0.418402393     0.285238072\nwin_shares                  0.054393013   0.097492868     0.594317191\nwin_shares_per_48_minutes   0.107304038   0.137777574     0.254973945\n                          off_rebound def_rebound      usg_pct     ts_pct\nplayer_height              0.65760271  0.68700030 -0.177007446 0.06006483\nplayer_weight              0.67675585  0.66063404 -0.121910583 0.07448756\ntotal_pointdiff           -0.01496378  0.04359454  0.110216090 0.12798024\noff_rebound                1.00000000  0.66778593 -0.180789738 0.04994140\ndef_rebound                0.66778593  1.00000000 -0.045259902 0.19617992\nusg_pct                   -0.18078974 -0.04525990  1.000000000 0.05445014\nts_pct                     0.04994140  0.19617992  0.054450142 1.00000000\nast_pct                   -0.51421487 -0.41312366  0.384755563 0.09705681\nminutes_played            -0.05290260  0.11541280  0.308357183 0.27084245\npoints                    -0.07785205  0.10274360  0.446422152 0.26796193\ntotal_rebounds             0.22632218  0.41700024  0.229947835 0.27009911\nassists                   -0.23193283 -0.09540154  0.344163015 0.18160387\nfield_goal_percentage      0.35949338  0.36972601 -0.022210944 0.77667573\nX3_point_percentage       -0.54066280 -0.35885339  0.221761606 0.28504863\nfree_throw_percentage     -0.30857323 -0.14840732  0.228140330 0.40077919\naverage_minutes_played    -0.16927890  0.05387397  0.346894711 0.39055367\npoints_per_game           -0.17707887  0.04901182  0.589341715 0.39305873\naverage_total_rebounds     0.41600309  0.64383238  0.174900774 0.37568287\naverage_assists           -0.41333046 -0.25168385  0.402747683 0.20115935\nwin_shares                 0.03016303  0.20170490  0.318168900 0.29002571\nwin_shares_per_48_minutes  0.19027493  0.24903569  0.003837843 0.75201904\n                              ast_pct minutes_played      points total_rebounds\nplayer_height             -0.68243890   -0.009102132 -0.02082012     0.25635523\nplayer_weight             -0.58957807    0.041667077  0.03134288     0.29785986\ntotal_pointdiff            0.16619710    0.412231159  0.44612294     0.39599919\noff_rebound               -0.51421487   -0.052902599 -0.07785205     0.22632218\ndef_rebound               -0.41312366    0.115412803  0.10274360     0.41700024\nusg_pct                    0.38475556    0.308357183  0.44642215     0.22994784\nts_pct                     0.09705681    0.270842455  0.26796193     0.27009911\nast_pct                    1.00000000    0.255019943  0.28300863     0.03675895\nminutes_played             0.25501994    1.000000000  0.95897535     0.86783533\npoints                     0.28300863    0.958975354  1.00000000     0.83044962\ntotal_rebounds             0.03675895    0.867835328  0.83044962     1.00000000\nassists                    0.56649552    0.817810469  0.81566452     0.55978719\nfield_goal_percentage     -0.07915255    0.215765604  0.19822690     0.31046511\nX3_point_percentage        0.35842417    0.230699638  0.24424883     0.04234180\nfree_throw_percentage      0.26209596    0.274457652  0.27964234     0.13318831\naverage_minutes_played     0.31616812    0.787021932  0.76844385     0.66331896\npoints_per_game            0.34506917    0.733432288  0.80896726     0.61762791\naverage_total_rebounds    -0.10755057    0.579292075  0.56107344     0.80052909\naverage_assists            0.81053547    0.564323653  0.58141373     0.31355800\nwin_shares                 0.23260096    0.922723107  0.93912252     0.87913134\nwin_shares_per_48_minutes  0.11768497    0.402856264  0.39462362     0.41665097\n                              assists field_goal_percentage X3_point_percentage\nplayer_height             -0.27679591           0.286714312        -0.403593505\nplayer_weight             -0.20681098           0.305856504        -0.430280295\ntotal_pointdiff            0.43801686           0.078994244         0.055997475\noff_rebound               -0.23193283           0.359493378        -0.540662795\ndef_rebound               -0.09540154           0.369726012        -0.358853389\nusg_pct                    0.34416301          -0.022210944         0.221761606\nts_pct                     0.18160387           0.776675727         0.285048626\nast_pct                    0.56649552          -0.079152549         0.358424170\nminutes_played             0.81781047           0.215765604         0.230699638\npoints                     0.81566452           0.198226897         0.244248834\ntotal_rebounds             0.55978719           0.310465111         0.042341803\nassists                    1.00000000           0.086187392         0.263607089\nfield_goal_percentage      0.08618739           1.000000000         0.004379196\nX3_point_percentage        0.26360709           0.004379196         1.000000000\nfree_throw_percentage      0.26680586           0.090102193         0.440507811\naverage_minutes_played     0.65289474           0.289054979         0.374135755\npoints_per_game            0.64142967           0.274080648         0.379534010\naverage_total_rebounds     0.29540788           0.472159362        -0.024162933\naverage_assists            0.82077667           0.046313381         0.377071150\nwin_shares                 0.78579829           0.247216749         0.160403313\nwin_shares_per_48_minutes  0.30447327           0.725075530         0.224957358\n                          free_throw_percentage average_minutes_played\nplayer_height                       -0.27720689            -0.08787463\nplayer_weight                       -0.25650492            -0.05571452\ntotal_pointdiff                      0.06297989             0.25085508\noff_rebound                         -0.30857323            -0.16927890\ndef_rebound                         -0.14840732             0.05387397\nusg_pct                              0.22814033             0.34689471\nts_pct                               0.40077919             0.39055367\nast_pct                              0.26209596             0.31616812\nminutes_played                       0.27445765             0.78702193\npoints                               0.27964234             0.76844385\ntotal_rebounds                       0.13318831             0.66331896\nassists                              0.26680586             0.65289474\nfield_goal_percentage                0.09010219             0.28905498\nX3_point_percentage                  0.44050781             0.37413575\nfree_throw_percentage                1.00000000             0.41623201\naverage_minutes_played               0.41623201             1.00000000\npoints_per_game                      0.40485168             0.91752846\naverage_total_rebounds               0.10605557             0.68627605\naverage_assists                      0.34294840             0.69824477\nwin_shares                           0.21843679             0.68681827\nwin_shares_per_48_minutes            0.33605870             0.43227808\n                          points_per_game average_total_rebounds\nplayer_height                 -0.09129908             0.43965076\nplayer_weight                 -0.05105532             0.45187202\ntotal_pointdiff                0.29041124             0.22679708\noff_rebound                   -0.17707887             0.41600309\ndef_rebound                    0.04901182             0.64383238\nusg_pct                        0.58934171             0.17490077\nts_pct                         0.39305873             0.37568287\nast_pct                        0.34506917            -0.10755057\nminutes_played                 0.73343229             0.57929208\npoints                         0.80896726             0.56107344\ntotal_rebounds                 0.61762791             0.80052909\nassists                        0.64142967             0.29540788\nfield_goal_percentage          0.27408065             0.47215936\nX3_point_percentage            0.37953401            -0.02416293\nfree_throw_percentage          0.40485168             0.10605557\naverage_minutes_played         0.91752846             0.68627605\npoints_per_game                1.00000000             0.63650742\naverage_total_rebounds         0.63650742             1.00000000\naverage_assists                0.68958754             0.22670027\nwin_shares                     0.69859653             0.60836229\nwin_shares_per_48_minutes      0.43061313             0.47460701\n                          average_assists win_shares win_shares_per_48_minutes\nplayer_height                 -0.49041466 0.05439301               0.107304038\nplayer_weight                 -0.41840239 0.09749287               0.137777574\ntotal_pointdiff                0.28523807 0.59431719               0.254973945\noff_rebound                   -0.41333046 0.03016303               0.190274929\ndef_rebound                   -0.25168385 0.20170490               0.249035688\nusg_pct                        0.40274768 0.31816890               0.003837843\nts_pct                         0.20115935 0.29002571               0.752019045\nast_pct                        0.81053547 0.23260096               0.117684968\nminutes_played                 0.56432365 0.92272311               0.402856264\npoints                         0.58141373 0.93912252               0.394623622\ntotal_rebounds                 0.31355800 0.87913134               0.416650967\nassists                        0.82077667 0.78579829               0.304473270\nfield_goal_percentage          0.04631338 0.24721675               0.725075530\nX3_point_percentage            0.37707115 0.16040331               0.224957358\nfree_throw_percentage          0.34294840 0.21843679               0.336058701\naverage_minutes_played         0.69824477 0.68681827               0.432278083\npoints_per_game                0.68958754 0.69859653               0.430613134\naverage_total_rebounds         0.22670027 0.60836229               0.474607007\naverage_assists                1.00000000 0.51358278               0.251153949\nwin_shares                     0.51358278 1.00000000               0.443410965\nwin_shares_per_48_minutes      0.25115395 0.44341097               1.000000000\n\n\nTo analyze the factor of weight and height in drafting. We first analyzed the correlation matrix of the height and weight to the other performance statistics. It is reasonable that height and weight are highly correlated and statistics about rebound, assist, and X_3 points have high absolute value of correlation score with height and weight. Then, we analyze the pair plot of these variables. The distribution of performance variables are all positive skewed, while the distribution of height and weight are close to the normal distribution. The scatter plot of height and weight with performance statistics are almost the same. We have the same conclusion for them. The different thing is height plot tend to have grid shape, which may caused by players tend to round up their height to integer. Statistics about rebound are positive related to the height weight, Players with high weight and height tend to have larger variance in the rebound statistics, whereas player with low weight and height has lower variance. We can draw the following conclusion that if the team need to strength their rebound aspects, they should absolutely draw players with high height and weight, but these players may not get enough rebound in the match.The similar things happen to the assist statistics. Assist statistics are negatively correlated to the height and weight. Players with high weight and height tend to have lower variance in the assist statistics, whereas player with low weight and height has higher variance. If a team need to strength their team corporation(assist), they should absolutely draw players with low height and weight, but these players may not assist enough in the match. We also discover that the variance difference is more obvious in the average assist, but less in assist percentage(Percentage of teammate field goals the player assisted).\n\n\n3.5.2 Analyze the weight and height of players over time\n\n\nCode\n#install.packages(\"ggforce\")\nlibrary(ggforce)\ndf_overtime &lt;- df_processed%&gt;%\n  filter(draft_round ==1)\n\n\np&lt;-ggplot(df_overtime, aes(x = player_height, y = player_weight)) +\n  geom_hex(bins = 10)\n  #geom_point(alpha=0.3, size=1) +\n  labs(x = \"Height\", y = \"Weight\", title = \"Scatter plot by Draft Year\")\n\n\n$x\n[1] \"Height\"\n\n$y\n[1] \"Weight\"\n\n$title\n[1] \"Scatter plot by Draft Year\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\nCode\nfor (n in c(1,2, 3)){\n  p &lt;- p + facet_wrap_paginate(~draft_year, ncol = 4, nrow = 4, page = n)\n  print(p)\n}\n\n\n\n\n\n\n\n\n\n\n\nTo analyze the draft preference of NBA team, facet the heatmap by draft year. We filter the players in the first draft round, to reflect the NBA preference. The general shape is linear relationship with height(180-220) and weight(80-130). However, there is difference in draft preference. In 1991, 1995, 2006, and 2012, NBA teams prefers players with larger height and weight. In 1994, 2006, 2011,2019，and, 2021, NBA teams prefer players with smaller height and weight. In 2012, 2017,and 2018, NBA teams prefer players with large height or small height. The preference doe not last long for years and we cannot derive any conclusion from this. However, players whose height is around 210 or 190, with corresponding weight of 120 or 80, are overall preferred to be selected.\n\n\n3.5.3 Analyze the perfomance difference bwtween American and non-American players\n\n\nCode\ndf_origin &lt;- df_processed %&gt;%\n  mutate(country = ifelse(country == \"USA\", \"USA\",\"non-American\"))%&gt;%\n  group_by(country)%&gt;%\n  summarise(across(where(is.numeric), mean, na.rm = TRUE))%&gt;%\n  select(country,usg_pct:ast_pct, field_goal_percentage:free_throw_percentage)%&gt;%\n  lapply(function(x) if(is.numeric(x)) x / x[1] else x) %&gt;%\n  as.data.frame()%&gt;%\n  pivot_longer(cols = usg_pct:free_throw_percentage, names_to = \"statistics\" )\n\n\nggplot(df_origin, aes(statistics, value, fill = country))+\n  geom_bar(stat=\"identity\", position = position_dodge())+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\nThe overall performance of non-American players is slightly worse than that of American player. The obvious difference between american player and non-american player is assist percentage. The assist percentage of non-american player is 20% lower than that of american player. Non-american did not show any adapting problem in playing in NBA. Drafting american players will not be a better choice."
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Win Shares is an advanced player statistic which attempts to divvy up credit for team success to the individuals on the team. This interactive graph allows you to view win shares of the draft class each year and hover over the data points to view more player information. You can notice some years where the first overall pick doesn’t always end up being the best player from that draft class such as Kevin Durant who was drafted 2nd in the 2007 draft. Also, there are players who are drafted much later (&gt;30) and end up being more “winning” players than players picked earlier such as Nikola Jokic who was drafted 41st in the 2014 draft."
  }
]